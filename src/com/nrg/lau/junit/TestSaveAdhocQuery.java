package com.nrg.lau.junit;

import junit.framework.TestCase;

import org.apache.log4j.Logger;
import org.springframework.context.support.ClassPathXmlApplicationContext;
import org.springframework.mock.web.MockHttpServletRequest;
import org.springframework.mock.web.MockHttpServletResponse;

import com.nrg.lau.regulatory.render.SetAdhocQueryAction;

public class TestSaveAdhocQuery extends TestCase {
	private static Logger log	= Logger.getLogger(TestSaveAdhocQuery.class);
	public void testSaveAdhocQuery()	{
		
		ClassPathXmlApplicationContext ctx = new ClassPathXmlApplicationContext("junitdispatcher-servlet.xml");
		log.info("Inside TestSaveAdhocQuery --> ");
		MockHttpServletRequest request 	= new MockHttpServletRequest();
		MockHttpServletResponse response = new MockHttpServletResponse();
		
		//insert
		/*String str = "<ROWSET><ROW><QUERY_ID></QUERY_ID><QUERY_NAME>New Query</QUERY_NAME><TOP_COMPONENT_ID>23</TOP_COMPONENT_ID>"
				+ "<SAVED_QUERY>NEW1</SAVED_QUERY><QUERY_PERMISSION>1</QUERY_PERMISSION><QUERY_DESCRIPTION>EQUAL</QUERY_DESCRIPTION>"
				+ "<QUERY_XML><![CDATA[<ROWSET><ROWSET><ROW><GROUP_ID>NEW1</GROUP_ID><GROUP_NAME/><LEVEL>0</LEVEL><OPERATOR>ALL</OPERATOR>"
				+ "<TYPE>GROUP</TYPE></ROW><ROW><DB_FIELD_NAME>REPORT_CONTACT_DATE</DB_FIELD_NAME><DISPLAY_NUMBER>1</DISPLAY_NUMBER>"
				+ "<FIELD_ID>101</FIELD_ID><GROUP_ID>NEW1</GROUP_ID><LEVEL>1</LEVEL><OPERATOR>EQUAL</OPERATOR><SELECTED>true</SELECTED>"
				+ "<TYPE>CONDITION</TYPE><VALUE>20131001</VALUE></ROW><ROW><DB_FIELD_NAME>SUBMITTED_FOLLOWUP_NUMBER</DB_FIELD_NAME>"
				+ "<DISPLAY_NUMBER>2</DISPLAY_NUMBER><FIELD_ID>104</FIELD_ID><GROUP_ID>NEW1</GROUP_ID><LEVEL>1</LEVEL><OPERATOR>EQUAL</OPERATOR>"
				+ "<SELECTED>true</SELECTED><TYPE>CONDITION</TYPE><VALUE>1</VALUE></ROW><ROW><DB_FIELD_NAME>PRODUCT_COMPLAINT_FLAG</DB_FIELD_NAME>"
				+ "<DISPLAY_NUMBER>3</DISPLAY_NUMBER><FIELD_ID>106</FIELD_ID><GROUP_ID>NEW1</GROUP_ID><LEVEL>1</LEVEL><OPERATOR>true</OPERATOR>"
				+ "<SELECTED>true</SELECTED><TYPE>CONDITION</TYPE></ROW><ROW><DB_FIELD_NAME>REPORT_STATUS</DB_FIELD_NAME>"
				+ "<DISPLAY_NUMBER>4</DISPLAY_NUMBER><FIELD_ID>109</FIELD_ID><GROUP_ID>NEW1</GROUP_ID><LEVEL>1</LEVEL><OPERATOR>EQUAL</OPERATOR>"
				+ "<SELECTED>true</SELECTED><TYPE>CONDITION</TYPE><VALUE>READ</VALUE></ROW></ROWSET></ROWSET>]]></QUERY_XML>"
				+ "<QUERY_SQL>CONDITION</QUERY_SQL><UPDATE_USER_ID>saju</UPDATE_USER_ID>"
				+ "<UPDATE_TIMESTAMP>15-OCT-13 12.02.08.440000000 AM</UPDATE_TIMESTAMP></ROW></ROWSET>";*/
		
		//update
		/*String str = "<ROWSET><ROW><QUERY_ID>4515</QUERY_ID><QUERY_NAME>Update Query</QUERY_NAME><TOP_COMPONENT_ID>23</TOP_COMPONENT_ID>"
				+ "<SAVED_QUERY>NEW1</SAVED_QUERY><QUERY_PERMISSION>1</QUERY_PERMISSION><QUERY_DESCRIPTION>EQUAL</QUERY_DESCRIPTION>"
				+ "<QUERY_XML><![CDATA[<ROWSET><ROWSET><ROW><GROUP_ID>NEW1</GROUP_ID><GROUP_NAME/><LEVEL>0</LEVEL><OPERATOR>ALL</OPERATOR>"
				+ "<TYPE>GROUP</TYPE></ROW><ROW><DB_FIELD_NAME>REPORT_CONTACT_DATE</DB_FIELD_NAME><DISPLAY_NUMBER>1</DISPLAY_NUMBER>"
				+ "<FIELD_ID>101</FIELD_ID><GROUP_ID>NEW1</GROUP_ID><LEVEL>1</LEVEL><OPERATOR>EQUAL</OPERATOR><SELECTED>true</SELECTED>"
				+ "<TYPE>CONDITION</TYPE><VALUE>20131001</VALUE></ROW><ROW><DB_FIELD_NAME>SUBMITTED_FOLLOWUP_NUMBER</DB_FIELD_NAME>"
				+ "<DISPLAY_NUMBER>2</DISPLAY_NUMBER><FIELD_ID>104</FIELD_ID><GROUP_ID>NEW1</GROUP_ID><LEVEL>1</LEVEL><OPERATOR>EQUAL</OPERATOR>"
				+ "<SELECTED>true</SELECTED><TYPE>CONDITION</TYPE><VALUE>1</VALUE></ROW><ROW><DB_FIELD_NAME>PRODUCT_COMPLAINT_FLAG</DB_FIELD_NAME>"
				+ "<DISPLAY_NUMBER>3</DISPLAY_NUMBER><FIELD_ID>106</FIELD_ID><GROUP_ID>NEW1</GROUP_ID><LEVEL>1</LEVEL><OPERATOR>true</OPERATOR>"
				+ "<SELECTED>true</SELECTED><TYPE>CONDITION</TYPE></ROW><ROW><DB_FIELD_NAME>REPORT_STATUS</DB_FIELD_NAME>"
				+ "<DISPLAY_NUMBER>4</DISPLAY_NUMBER><FIELD_ID>109</FIELD_ID><GROUP_ID>NEW1</GROUP_ID><LEVEL>1</LEVEL>"
				+ "<OPERATOR>EQUAL</OPERATOR><SELECTED>true</SELECTED><TYPE>CONDITION</TYPE><VALUE>READ</VALUE></ROW></ROWSET></ROWSET>]]></QUERY_XML>"
				+ "<QUERY_SQL>CONDITION</QUERY_SQL><TRANSACTION_TYPE>1</TRANSACTION_TYPE><UPDATE_USER_ID>saju</UPDATE_USER_ID>"
				+ "<UPDATE_TIMESTAMP>15-OCT-13 12.02.08.440000000 AM</UPDATE_TIMESTAMP></ROW></ROWSET>";*/
		
		//delete
		String str = "<ROWSET><ROW><QUERY_ID>4515</QUERY_ID><QUERY_NAME>Update Query</QUERY_NAME><TOP_COMPONENT_ID>23</TOP_COMPONENT_ID>"
				+ "<SAVED_QUERY>NEW1</SAVED_QUERY><QUERY_PERMISSION>1</QUERY_PERMISSION><QUERY_DESCRIPTION>EQUAL</QUERY_DESCRIPTION>"
				+ "<QUERY_XML><![CDATA[<ROWSET><ROWSET><ROW><GROUP_ID>NEW1</GROUP_ID><GROUP_NAME/><LEVEL>0</LEVEL><OPERATOR>ALL</OPERATOR>"
				+ "<TYPE>GROUP</TYPE></ROW><ROW><DB_FIELD_NAME>REPORT_CONTACT_DATE</DB_FIELD_NAME><DISPLAY_NUMBER>1</DISPLAY_NUMBER>"
				+ "<FIELD_ID>101</FIELD_ID><GROUP_ID>NEW1</GROUP_ID><LEVEL>1</LEVEL><OPERATOR>EQUAL</OPERATOR><SELECTED>true</SELECTED>"
				+ "<TYPE>CONDITION</TYPE><VALUE>20131001</VALUE></ROW><ROW><DB_FIELD_NAME>SUBMITTED_FOLLOWUP_NUMBER</DB_FIELD_NAME>"
				+ "<DISPLAY_NUMBER>2</DISPLAY_NUMBER><FIELD_ID>104</FIELD_ID><GROUP_ID>NEW1</GROUP_ID><LEVEL>1</LEVEL><OPERATOR>EQUAL</OPERATOR>"
				+ "<SELECTED>true</SELECTED><TYPE>CONDITION</TYPE><VALUE>1</VALUE></ROW><ROW><DB_FIELD_NAME>PRODUCT_COMPLAINT_FLAG</DB_FIELD_NAME>"
				+ "<DISPLAY_NUMBER>3</DISPLAY_NUMBER><FIELD_ID>106</FIELD_ID><GROUP_ID>NEW1</GROUP_ID><LEVEL>1</LEVEL><OPERATOR>true</OPERATOR>"
				+ "<SELECTED>true</SELECTED><TYPE>CONDITION</TYPE></ROW><ROW><DB_FIELD_NAME>REPORT_STATUS</DB_FIELD_NAME>"
				+ "<DISPLAY_NUMBER>4</DISPLAY_NUMBER><FIELD_ID>109</FIELD_ID><GROUP_ID>NEW1</GROUP_ID><LEVEL>1</LEVEL>"
				+ "<OPERATOR>EQUAL</OPERATOR><SELECTED>true</SELECTED><TYPE>CONDITION</TYPE><VALUE>READ</VALUE></ROW></ROWSET></ROWSET>]]></QUERY_XML>"
				+ "<QUERY_SQL>CONDITION</QUERY_SQL><TRANSACTION_TYPE>0</TRANSACTION_TYPE><UPDATE_USER_ID>saju</UPDATE_USER_ID>"
				+ "<UPDATE_TIMESTAMP>15-OCT-13 12.02.08.440000000 AM</UPDATE_TIMESTAMP></ROW></ROWSET>";
				
		request.setParameter("lauQuerySaveXmlData", str);				
		SetAdhocQueryAction testObj1 = (SetAdhocQueryAction)ctx.getBean("setAdhocQueryAction");
		
		try {
			testObj1.render(null, request, response);
		} catch (Exception e) {
			
			e.printStackTrace();
		}
	}
	
}
